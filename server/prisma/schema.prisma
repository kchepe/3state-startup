// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  email       String       @unique
  firstName   String
  lastName    String
  password    String
  phoneNumber String
  imageUrl    String
  userType    UserTypeEnum
  properties  Properties[]
}

model AmenityCategories {
  id           String              @id @default(auto()) @map("_id") @db.ObjectId
  categoryName AmenityCategoryEnum
}

model Amenities {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  categoryId String
  name       String
}

model Provinces {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  provinceCode String   @unique
  provinceName String
  cities       Cities[]
}

model Cities {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  cityCode     String      @unique
  cityName     String
  provinceCode String
  Provinces    Provinces   @relation(fields: [provinceCode], references: [provinceCode])
  barangays    Barangays[]
}

model Barangays {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  brgyCode     String
  brgyName     String
  provinceCode String
  cityCode     String
  Cities       Cities @relation(fields: [cityCode], references: [cityCode])
}

model Properties {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  userId         String   @db.ObjectId
  user           Users?   @relation(fields: [userId], references: [id])
  address        String
  amenities      String[]
  balcony        Boolean
  barangay       String
  bathroom       Int
  city           String
  description    String
  floorAreaInSqm Int
  furnishing     String
  housingMethod  String
  latitude       String
  longitude      String
  lotAreaInSqm   Int
  parkingSpace   Int
  price          String
  province       String
  title          String
  type           String
  zipCode        String
}

enum UserTypeEnum {
  broker
  owner
  agent
  developer
  brokerage
}

enum AmenityCategoryEnum {
  outdoor
  indoor
  security
}
